✅ Automatic Testing with Google Test (Gtest)
We implemented over 25 comprehensive unit and integration tests using Google Test:
How to Run:
```bash
cd build
cmake ..
make
ctest

🔄 CI/CD Support:
Every push to the repository automatically triggers GitHub Actions to build the project and run all tests, ensuring continuous integration and early detection of issues.

🕹️ Visual Simualation 🎨:
Written in C++ with ncurses libary, it offers unique diffrent 🎨colors for up to 9 diffrent player Tanks, along with all the directions
allowing running back and forward in the Simualation with the arrows keys.

*Note you need to open with enough terminal space while running for ncurses to produce the full Visualization with Player colors examples  
(Just Maximise terminal Window)

▶️ To Run with Visualization, add the --visual flag. For example:
cd build
cmake ..
make
./tanks_game ../files/input_maps/test_map_1.txt --visual

📝 Logging Bonus:
A logging system was implemented that writes to a log.txt file in the build directory.
For each tank, the log records every action taken in each round, including the round number, step count, player ID, tank ID, AI algorithm name, action name, remaining ammunition, and cooldown status.
This feature is especially useful for debugging and provides a clear, detailed view of the game's flow and the decision-making process of each tank.

👥 Support for Up to 9 Players:
The game engine supports battles with up to 9 players. A fourth input file demonstrating this feature is included:
./files/input_maps/test_map_4_big_9_multiple_players.txt


🛠️ Config Bonus:
Added support for a config.json file to override gameplay constants (shell speed, shoot cooldown ,round without shells till draw constant) 
at runtime without recompilation. Managed via ConfigManager.h / cpp and applied through Constants.h / cpp initialization. 
The file is at ./files/config.json 
(Changing shell speed to 1 or 3 is pretty cool)

📦 Extra:
- 🗺️Many additional extra game maps beyond the required four in ./files/input_maps/extra_maps
- 🧾input_errors.txt provides detailed, descriptive and precise error reports for invalid maps, exceeding assignment requirements 